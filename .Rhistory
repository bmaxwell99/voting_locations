#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns?
df %>% filter(State_Abbr == 'WV') %>% View()
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns?
df %>% filter(State_Abbr == 'WI') %>% View()
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df %>% filter(State_Abbr == 'WY') %>% View()
View(raw_data)
WY
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df %>% filter(State_Abbr == 'WY') %>% View()
df <- raw_data %>% select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,)
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df %>% filter(State_Abbr == 'WY') %>% View()
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df %>% filter(State_Abbr == 'RI') %>% View()
?separate
strsplit
?strsplit
strsplit(4400105140, split = 0, fixed = TRUE)
strsplit('4400105140', split = 0, fixed = TRUE)
strsplit('4400105140', fixed = TRUE)
strsplit('4400105140',split = '', fixed = TRUE)
str_sub('4400105140', start = 3, end = 5)
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df %>% mutate(FIPSCode = trimws(as.character(FIPSCode)))
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df <-
df %>%
mutate(FIPSCode = trimws(as.character(FIPSCode)))
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df <-
df %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 3, end = 5))
head(df)
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df <-
df %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5))
head(df)
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df <-
df %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5))
head(df)
test <- c(1, 2, NA)
sum(test)
?sum
sum(test, na.rm = T)
?if_else
mode(df$D1a[1])
df$D1a[1]
mode(df$D2b[1])
df$D2b[1]
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df <-
df %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88), 1, 0) %>%
mutate(D2b_NA = if_else(D2b == -99 | D2b == -88), 1, 0)
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df <-
df %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88, 1, 0)) %>%
mutate(D2b_NA = if_else(D2b == -99 | D2b == -88, 1, 0))
head(df)
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df <-
df %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88, 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88, 1, 0)) %>%
mutate(D2b_NA = if_else(D2b == -99 | D2b == -88, 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88, 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88, 1, 0))
raw_data_16 <- read.csv('EAVS 2016 Final Data for Public Release v.4.csv', stringsAsFactors = FALSE)
?replace()
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df <-
df %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88, 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88, 1, 0)) %>%
mutate(D2b_NA = if_else(D2b == -99 | D2b == -88, 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88, 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88, 1, 0)) %>%
mutate(D2b = replace(D2b, D2b < 0, 0))
head(df)
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df <-
df %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88, 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88, 1, 0)) %>%
mutate(D2b_NA = if_else(D2b == -99 | D2b == -88, 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88, 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88, 1, 0)) %>%
mutate(D1a = replace(D1a, D1a < 0, NA)) %>%
mutate(D2a = replace(D2a, D2a < 0, NA)) %>%
mutate(D2b = replace(D2b, D2b < 0, NA)) %>%
mutate(D4a = replace(D4a, D4a < 0, NA)) %>%
mutate(D5a = replace(D5a, D5a < 0, NA))
head(df)
raw_data_18 <- read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE)
df <- raw_data %>% select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,)
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df <-
df %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88, 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88, 1, 0)) %>%
mutate(D2b_NA = if_else(D2b == -99 | D2b == -88, 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88, 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88, 1, 0)) %>%
mutate(D1a = replace(D1a, D1a < 0, NA)) %>%
mutate(D2a = replace(D2a, D2a < 0, NA)) %>%
mutate(D2b = replace(D2b, D2b < 0, NA)) %>%
mutate(D4a = replace(D4a, D4a < 0, NA)) %>%
mutate(D5a = replace(D5a, D5a < 0, NA))
head(df)
#sets WD to git repo folder, change to run on different computer
setwd("C:/Users/dark_/Documents/NDRN/voting_locations")
raw_data_18 <- read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE)
df <- raw_data %>% select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,)
raw_data_18 <- read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE)
df <- raw_data_18 %>% select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,)
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df <-
df %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(is.na(D1a) 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88, 1, 0)) %>%
mutate(D2b_NA = if_else(is.na(D2b), 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88, 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88, 1, 0)) %>%
mutate(D1a = replace(D1a, D1a < 0, NA)) %>%
mutate(D2a = replace(D2a, D2a < 0, NA)) %>%
mutate(D2b = replace(D2b, D2b < 0, NA)) %>%
mutate(D4a = replace(D4a, D4a < 0, NA)) %>%
mutate(D5a = replace(D5a, D5a < 0, NA))
raw_data_18 <- read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE)
df <- raw_data_18 %>% select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,)
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df <-
df %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(is.na(D1a), 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88, 1, 0)) %>%
mutate(D2b_NA = if_else(is.na(D2b), 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88, 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88, 1, 0)) %>%
mutate(D1a = replace(D1a, D1a < 0, NA)) %>%
mutate(D2a = replace(D2a, D2a < 0, NA)) %>%
mutate(D2b = replace(D2b, D2b < 0, NA)) %>%
mutate(D4a = replace(D4a, D4a < 0, NA)) %>%
mutate(D5a = replace(D5a, D5a < 0, NA))
head(df)
raw_data_18 <-
#raw_data_16 <- read.csv('EAVS 2016 Final Data for Public Release v.4.csv', stringsAsFactors = FALSE)
df <- raw_data_18 %>%
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df_18 <-
read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE) %>%
select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,) %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88, 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88, 1, 0)) %>%
mutate(D2b_NA = if_else(is.na(D2b), 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88, 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88, 1, 0)) %>%
mutate(D1a = replace(D1a, D1a < 0, NA)) %>%
mutate(D2a = replace(D2a, D2a < 0, NA)) %>%
mutate(D2b = replace(D2b, D2b < 0, NA)) %>%
mutate(D4a = replace(D4a, D4a < 0, NA)) %>%
mutate(D5a = replace(D5a, D5a < 0, NA))
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df_18 <-
read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE) %>%
select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,) %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88, 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88, 1, 0)) %>%
mutate(D2b_NA = if_else(is.na(D2b), 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88, 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88, 1, 0)) %>%
mutate(D1a = replace(D1a, D1a < 0, NA)) %>%
mutate(D2a = replace(D2a, D2a < 0, NA)) %>%
mutate(D2b = replace(D2b, D2b < 0, NA)) %>%
mutate(D4a = replace(D4a, D4a < 0, NA)) %>%
mutate(D5a = replace(D5a, D5a < 0, NA))
head(df_18)
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df_18 <-
read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE) %>%
select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,) %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88, 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88, 1, 0)) %>%
mutate(D2b_NA = if_else(D2b == -99 | D2b == -88, 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88, 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88, 1, 0)) %>%
mutate(D1a = replace(D1a, D1a < 0, NA)) %>%
mutate(D2a = replace(D2a, D2a < 0, NA)) %>%
mutate(D2b = replace(D2b, D2b < 0, NA)) %>%
mutate(D4a = replace(D4a, D4a < 0, NA)) %>%
mutate(D5a = replace(D5a, D5a < 0, NA))
head(df_18)
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df_18 <-
read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE) %>%
select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,) %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88, 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88, 1, 0)) %>%
mutate(D2b_NA = if_else(D2b == -99 | D2b == -88, 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88, 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88, 1, 0)) %>%
mutate(D1a = replace(D1a, D1a < 0, 0)) %>%
mutate(D2a = replace(D2a, D2a < 0, 0)) %>%
mutate(D2b = replace(D2b, D2b < 0, 0)) %>%
mutate(D4a = replace(D4a, D4a < 0, 0)) %>%
mutate(D5a = replace(D5a, D5a < 0, 0))
df_18 %>% group_by(FIPS_STATE, FIPS_COUNTY) %>% summarise(sum(D4a + D5a)) %>% View()
df_18 <-
read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE) %>%
select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,) %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88, 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88, 1, 0)) %>%
mutate(D2b_NA = if_else(D2b == -99 | D2b == -88, 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88, 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88, 1, 0)) %>%
mutate(D1a = replace(D1a, D1a < 0, 0)) %>%
mutate(D2a = replace(D2a, D2a < 0, 0)) %>%
mutate(D2b = replace(D2b, D2b < 0, 0)) %>%
mutate(D4a = replace(D4a, D4a < 0, 0)) %>%
mutate(D5a = replace(D5a, D5a < 0, 0))
df_18 <-
read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE) %>%
select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,) %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88, 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88, 1, 0)) %>%
mutate(D2b_NA = if_else(D2b == -99 | D2b == -88, 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88, 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88, 1, 0)) %>%
mutate(D1a = replace(D1a, D1a < 0, 0)) %>%
mutate(D2a = replace(D2a, D2a < 0, 0)) %>%
mutate(D2b = replace(D2b, D2b < 0, 0)) %>%
mutate(D4a = replace(D4a, D4a < 0, 0)) %>%
mutate(D5a = replace(D5a, D5a < 0, 0))
df_18 %>% filter(FIPS_STATE > 50)
df_18 %>% filter(FIPS_STATE > 50) %>% View()
df_18 %>% n_distinct(FIPS_STATE)
df_18 %>% n_distinct(FIPS_STATE)
n_distinct(df_18$FIPS_STATE)
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df_18 <-
read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE) %>%
select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,) %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88, 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88, 1, 0)) %>%
mutate(D2b_NA = if_else(D2b == -99 | D2b == -88, 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88, 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88, 1, 0)) %>%
mutate(D1a = replace(D1a, D1a < 0, 0)) %>%
mutate(D2a = replace(D2a, D2a < 0, 0)) %>%
mutate(D2b = replace(D2b, D2b < 0, 0)) %>%
mutate(D4a = replace(D4a, D4a < 0, 0)) %>%
mutate(D5a = replace(D5a, D5a < 0, 0))
n_distinct(df_18$State_Full)
df_18 %>% distinct(df_18$State_Full)
geo_code <-
read.csv('all-geocodes-v2018.csv', stringsAsFactors = FALSE)
View(geo_code)
geo_code %>% filter(Area.Name..including.legal.statistical.area.description. == 'Connecticut')
geo_code %>% filter(State.Code..FIPS. == 9)
geo_code %>% filter(State.Code..FIPS. == 9) %>% View(0)
geo_code %>% filter(State.Code..FIPS. == 9) %>% View()
df_18 %>% filter(Jurisdiction_Name == 'Bethel town')
df_18 %>% filter(State_Full == 'Connecticut')
df_18 %>% filter(State_Abbr == 'CT')
df_18 %>% filter(State_Abbr == 'CT') %>% View()
df_18 %>% filter(State_Abbr == 'BETHEL TOWN') %>% View()
df_18 %>% filter(Jurisdiction_Name == 'BETHEL TOWN') %>% View()
geo_code %>% filter(State.Code..FIPS. == 9) %>% View()
geo_code %>% filter(Area.Name..including.legal.statistical.area.description. == 'Bethel Town')
geo_code %>% filter(Area.Name..including.legal.statistical.area.description. == 'Bethel town')
geo_code %>% filter(Area.Name..including.legal.statistical.area.description. == 'Bethel town') %>% View()
geo_code %>% filter(Area.Name..including.legal.statistical.area.description. == 'Bethel town' & State.Code..FIPS. == 9) %>% View()
df_18 %>% filter(Jurisdiction_Name == 'BETHEL TOWN')
geo_code %>% filter(Area.Name..including.legal.statistical.area.description. == 'Bethel town' & State.Code..FIPS. == 9)
df_18 %>% filter(Jurisdiction_Name == 'BETHEL TOWN')
df_18 %>% n_distinct(State_Full)
df_18 %>% n_distinct(df_18$State_Full)
df_18 %>% n_distinct(df_18$State_Abbr)
n_distinct(df_18$State_Abbr)
n_distinct(df_18$State_Full)
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df_18 <-
read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE) %>%
select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,) %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88, 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88, 1, 0)) %>%
mutate(D2b_NA = if_else(D2b == -99 | D2b == -88, 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88, 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88, 1, 0)) %>%
mutate(D1a = replace(D1a, D1a < 0, 0)) %>%
mutate(D2a = replace(D2a, D2a < 0, 0)) %>%
mutate(D2b = replace(D2b, D2b < 0, 0)) %>%
mutate(D4a = replace(D4a, D4a < 0, 0)) %>%
mutate(D5a = replace(D5a, D5a < 0, 0)) %>%
summary_18 <-
df_18 %>%
group_by(State_Full) %>%
summarise(D1A_18 = sum(D1a),
D2A_18 = sum(D2a),
D2B_18 = sum(D2b),
D4A_18 = sum(D4a),
D5A_18 = sum(D5a)
)
summary_18 <-
df_18 %>%
group_by(State_Full) %>%
summarise(D1A_18 = sum(D1a),
D2A_18 = sum(D2a),
D2B_18 = sum(D2b),
D4A_18 = sum(D4a),
D5A_18 = sum(D5a)
)
View(summary_18)
df_18 %>% filter(State_Full == 'Arkansas')
df_18 %>% filter(State_Abbr == 'AS')
df_18 %>% filter(State_Abbr == 'AK')
df_18 %>% filter(State_Abbr == 'AR')
df_18 <-
read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE)
df_18 %>% filter(State_Abbr == 'AR')
df_18 <-
read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE) %>%
select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,)
df_18 %>% filter(State_Abbr == 'AR')
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df_18 <-
read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE) %>%
select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,) %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88 | is.na(D1a), 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88 | is.na(D2a), 1, 0)) %>%
mutate(D2b_NA = if_else(D2b == -99 | D2b == -88 | is.na(D2b), 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88 | is.na(D4a), 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88 | is.na(D5a), 1, 0)) %>%
mutate(D1a = replace(D1a, D1a < 0, 0)) %>%
mutate(D2a = replace(D2a, D2a < 0, 0)) %>%
mutate(D2b = replace(D2b, D2b < 0, 0)) %>%
mutate(D4a = replace(D4a, D4a < 0, 0)) %>%
mutate(D5a = replace(D5a, D5a < 0, 0))
df_18 %>% filter(State_Abbr == 'AR')
df_18 <-
read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE) %>%
select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,) %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88 | is.na(D1a), 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88 | is.na(D2a), 1, 0)) %>%
mutate(D2b_NA = if_else(D2b == -99 | D2b == -88 | is.na(D2b), 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88 | is.na(D4a), 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88 | is.na(D5a), 1, 0))
df_18 %>% filter(State_Abbr == 'AR')
#Connecticut collects by town, Louisiana collects by Parish, Main collects by something that has 500+,
#Massachusetts collects by town, New Hampshite collects by town, Rhode Island by town, VT is towns? Wiscononsin is,
# towns concatenated with county,
df_18 <-
read.csv('EAVS_2018_for_Public_Release_nolabel.CSV', stringsAsFactors = FALSE) %>%
select(FIPSCode, Jurisdiction_Name, State_Full, State_Abbr,D1a, D2a, D2b, D4a, D5a,) %>%
mutate(FIPSCode = trimws(as.character(FIPSCode))) %>%
mutate(FIPS_STATE = str_sub(FIPSCode, start = 1, end = 2)) %>%
mutate(FIPS_COUNTY = str_sub(FIPSCode, start = 3, end = 5)) %>%
mutate(D1a_NA = if_else(D1a == -99 | D1a == -88 | is.na(D1a), 1, 0)) %>%
mutate(D2a_NA = if_else(D2a == -99 | D2a == -88 | is.na(D2a), 1, 0)) %>%
mutate(D2b_NA = if_else(D2b == -99 | D2b == -88 | is.na(D2b), 1, 0)) %>%
mutate(D4a_NA = if_else(D4a == -99 | D4a == -88 | is.na(D4a), 1, 0)) %>%
mutate(D5a_NA = if_else(D5a == -99 | D5a == -88 | is.na(D5a), 1, 0)) %>%
mutate(D1a = replace(D1a, D1a < 0 | is.na(D1a), 0)) %>%
mutate(D2a = replace(D2a, D2a < 0 | is.na(D2a), 0)) %>%
mutate(D2b = replace(D2b, D2b < 0 | is.na(D2b), 0)) %>%
mutate(D4a = replace(D4a, D4a < 0 | is.na(D4a), 0)) %>%
mutate(D5a = replace(D5a, D5a < 0 | is.na(D5a), 0))
df_18 %>% filter(State_Abbr == 'AR')
summary_18 <-
df_18 %>%
group_by(State_Full) %>%
summarise(D1A_18 = sum(D1a),
D2A_18 = sum(D2a),
D2B_18 = sum(D2b),
D4A_18 = sum(D4a),
D5A_18 = sum(D5a)
)
df_18 %>% filter(State_Abbr == 'AR') %>% nrow()
df_18 %>% filter(State_Abbr == 'AR') %>% summarise( D1A_ratio = sum(D1a_NA) / nrow())
df_18 %>% filter(State_Abbr == 'AR') %>% summarise(D1A_ratio = sum(D1a_NA) / nrow())
?summarise()
df_18 %>% filter(State_Abbr == 'AR') %>% summarise(D1A_ratio = sum(D1a_NA) / nrow())
df_18 %>%
filter(State_Abbr == 'AR') %>%
group_by(State_Full)
df_18 %>%
filter(State_Abbr == 'AR') %>%
group_by(State_Full) %>%
summarise(D1A_ratio = sum(D1a_NA) / nrow())
df_18 %>%
filter(State_Abbr == 'AR') %>%
group_by(State_Full) %>%
summarise(D1A_ratio = sum(D1a_NA) / nrow(D1a_NA))
df_18 %>%
filter(State_Abbr == 'AR') %>%
group_by(State_Full) %>%
summarise(D1A_ratio = sum(D1a_NA))
df_18 %>%
filter(State_Abbr == 'AR') %>%
group_by(State_Full) %>%
summarise(D1A_ratio = sum(D1a_NA)) / n())
df_18 %>%
filter(State_Abbr == 'AR') %>%
group_by(State_Full) %>%
summarise(D1A_ratio = sum(D1a_NA) / n())
